{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "authorship_tag": "ABX9TyPTNdiWMJhgPTybRlqkOFYr",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/iraNklva/CNNs/blob/main/Fashion%20MNIST\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Цель задания:** научиться базово подбирать архитектуру, строить и обучать свёрточные нейронные сети для решения задачи классификации.\n",
        "\n",
        "**Контекст**\n",
        "\n",
        "Это домашнее задание по сути является продолжением предыдущего. В нём вы меняете архитектуру сети с полносвязной на свёрточную.\n",
        "\n",
        "**Задание**\n",
        "\n",
        "Постройте модель, используя архитектуру со свёрточными слоями, для классификации Fashion MNIST. Итоговое качество (accuracy) должно быть не ниже 89,5.\n",
        "\n",
        "**Инструкция к выполнению задания**\n",
        "\n",
        "1. Скачайте тренировочную и тестовою часть датасета Fashion MNIST\n",
        "2. Постройте архитектуру модели, используя свёрточные слои, слои регуляризации и один финальный полносвязный слой\n",
        "3. Обучите модель до необходимого качества. Если сеть не обучается до необходимого качества, попробуйте поменять архитектуру сети, варьируя параметры свёрток, количество каналов, количество свёрточных слоёв, слои регуляризации, тип оптимайзера и т. д."
      ],
      "metadata": {
        "id": "PC9LGp19n8vV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "import keras\n",
        "from keras.datasets import fashion_mnist\n",
        "from sklearn.model_selection import train_test_split\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "yvhOOT-ooNk4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Загружаем данные"
      ],
      "metadata": {
        "id": "gEo4berkodpM"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NV1_rbmYnzOB",
        "outputId": "e6dd9e30-929b-4067-aa4b-ffdd4f0cf729"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n",
            "29515/29515 [==============================] - 0s 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n",
            "26421880/26421880 [==============================] - 0s 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n",
            "5148/5148 [==============================] - 0s 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n",
            "4422102/4422102 [==============================] - 0s 0us/step\n"
          ]
        }
      ],
      "source": [
        "(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('The shape of train', X_train.shape)\n",
        "print('The shape of train_label', y_train.shape)\n",
        "print('The shape of test', X_test.shape)\n",
        "print('The shape of test_label', y_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g6fs11FVofkq",
        "outputId": "9c0e572a-f805-4bfe-cc51-dcfe8a1baccc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The shape of train (60000, 28, 28)\n",
            "The shape of train_label (60000,)\n",
            "The shape of test (10000, 28, 28)\n",
            "The shape of test_label (10000,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Визуализируем данные"
      ],
      "metadata": {
        "id": "HJs-cfbjooSJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "class_names = np.array(['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot'])\n",
        "\n",
        "plt.figure(figsize=[10,10])\n",
        "for i in range(12):\n",
        "    plt.subplot(3, 4, i + 1)\n",
        "    plt.xlabel(class_names[y_train[i]])\n",
        "    plt.imshow(X_train[i], cmap='gray')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 794
        },
        "id": "azyjYa1QoomT",
        "outputId": "313b0015-b634-414b-ad90-4dcf24034c23"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x1000 with 12 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Предобработка данных"
      ],
      "metadata": {
        "id": "J0FQSOm8osaH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=10**4, random_state=42)"
      ],
      "metadata": {
        "id": "uaJ7Gjugop9P"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train = X_train / 255\n",
        "X_val = X_val / 255\n",
        "X_test = X_test / 255"
      ],
      "metadata": {
        "id": "s0EF_cKGpTdu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Архитектура модели"
      ],
      "metadata": {
        "id": "qnYMGCLTpZel"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model = tf.keras.models.Sequential([\n",
        "    tf.keras.layers.Conv2D(32, (3, 3),  activation='relu', input_shape = (28, 28, 1)),\n",
        "    tf.keras.layers.MaxPooling2D((2, 2)),\n",
        "    tf.keras.layers.Conv2D(64, (3, 3),  activation='relu'),\n",
        "    tf.keras.layers.MaxPooling2D((2, 2)),\n",
        "    tf.keras.layers.Flatten(),\n",
        "    tf.keras.layers.Dense(128, activation='relu'),\n",
        "    tf.keras.layers.Dropout(0.5),\n",
        "    tf.keras.layers.Dense(10, activation = 'softmax')\n",
        "])"
      ],
      "metadata": {
        "id": "CJ_JAR-npVpv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Обучение модели"
      ],
      "metadata": {
        "id": "NsofmpCPqSuA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "y_train, y_val = (keras.utils.to_categorical(y) for y in (y_train, y_val))"
      ],
      "metadata": {
        "id": "8H0fUmrJqP5y"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.001, use_ema=True),\n",
        "              loss='categorical_crossentropy',\n",
        "              metrics=['accuracy'])\n",
        "model.fit(X_train,\n",
        "          y_train,\n",
        "          epochs=20,\n",
        "          batch_size=64,\n",
        "          validation_data=(X_val, y_val))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LRnoR0tnqRSu",
        "outputId": "ab6f8c1c-f9f7-4eb7-e5c1-a53fc8e69073"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n",
            "782/782 [==============================] - 6s 6ms/step - loss: 0.4724 - accuracy: 0.8269 - val_loss: 0.3735 - val_accuracy: 0.8613\n",
            "Epoch 2/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.3986 - accuracy: 0.8540 - val_loss: 0.3377 - val_accuracy: 0.8715\n",
            "Epoch 3/20\n",
            "782/782 [==============================] - 4s 6ms/step - loss: 0.3559 - accuracy: 0.8689 - val_loss: 0.3019 - val_accuracy: 0.8891\n",
            "Epoch 4/20\n",
            "782/782 [==============================] - 4s 5ms/step - loss: 0.3333 - accuracy: 0.8773 - val_loss: 0.3035 - val_accuracy: 0.8875\n",
            "Epoch 5/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.3070 - accuracy: 0.8857 - val_loss: 0.2926 - val_accuracy: 0.8873\n",
            "Epoch 6/20\n",
            "782/782 [==============================] - 4s 6ms/step - loss: 0.2877 - accuracy: 0.8937 - val_loss: 0.2670 - val_accuracy: 0.9022\n",
            "Epoch 7/20\n",
            "782/782 [==============================] - 4s 6ms/step - loss: 0.2709 - accuracy: 0.9002 - val_loss: 0.2646 - val_accuracy: 0.9030\n",
            "Epoch 8/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.2558 - accuracy: 0.9041 - val_loss: 0.2554 - val_accuracy: 0.9078\n",
            "Epoch 9/20\n",
            "782/782 [==============================] - 4s 6ms/step - loss: 0.2450 - accuracy: 0.9097 - val_loss: 0.2507 - val_accuracy: 0.9076\n",
            "Epoch 10/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.2333 - accuracy: 0.9126 - val_loss: 0.2561 - val_accuracy: 0.9069\n",
            "Epoch 11/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.2219 - accuracy: 0.9182 - val_loss: 0.2425 - val_accuracy: 0.9095\n",
            "Epoch 12/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.2146 - accuracy: 0.9188 - val_loss: 0.2674 - val_accuracy: 0.9030\n",
            "Epoch 13/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.2041 - accuracy: 0.9219 - val_loss: 0.2345 - val_accuracy: 0.9155\n",
            "Epoch 14/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.1949 - accuracy: 0.9266 - val_loss: 0.2453 - val_accuracy: 0.9138\n",
            "Epoch 15/20\n",
            "782/782 [==============================] - 4s 6ms/step - loss: 0.1875 - accuracy: 0.9305 - val_loss: 0.2402 - val_accuracy: 0.9185\n",
            "Epoch 16/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.1780 - accuracy: 0.9323 - val_loss: 0.2447 - val_accuracy: 0.9159\n",
            "Epoch 17/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.1721 - accuracy: 0.9338 - val_loss: 0.2544 - val_accuracy: 0.9140\n",
            "Epoch 18/20\n",
            "782/782 [==============================] - 4s 6ms/step - loss: 0.1661 - accuracy: 0.9362 - val_loss: 0.2487 - val_accuracy: 0.9154\n",
            "Epoch 19/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.1590 - accuracy: 0.9387 - val_loss: 0.2595 - val_accuracy: 0.9139\n",
            "Epoch 20/20\n",
            "782/782 [==============================] - 5s 6ms/step - loss: 0.1563 - accuracy: 0.9399 - val_loss: 0.2595 - val_accuracy: 0.9155\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.History at 0x78174a16a1d0>"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Оценка качества предсказания на тестовых данных"
      ],
      "metadata": {
        "id": "pTHjoegitXbA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = model.predict(X_test)\n",
        "y_pred_labels = np.argmax(y_pred, axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bnV3ya00tZjx",
        "outputId": "0c859aeb-79ed-49fd-a87f-a7d3de752e87"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 [==============================] - 1s 2ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score\n",
        "test_acc = accuracy_score(y_test, y_pred_labels)\n",
        "print(\"\\n Test_acc =\", test_acc)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dCWW6-5Lta-K",
        "outputId": "2520b1bf-a653-4225-8a91-24f32b085d9e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Test_acc = 0.9156\n"
          ]
        }
      ]
    }
  ]
}